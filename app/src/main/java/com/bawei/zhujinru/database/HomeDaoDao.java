package com.bawei.zhujinru.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.bawei.zhujinru.model.Dao.HomeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "HOME_DAO".
*/
public class HomeDaoDao extends AbstractDao<HomeDao, Void> {

    public static final String TABLENAME = "HOME_DAO";

    /**
     * Properties of entity HomeDao.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Home = new Property(0, String.class, "home", false, "HOME");
    }


    public HomeDaoDao(DaoConfig config) {
        super(config);
    }
    
    public HomeDaoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"HOME_DAO\" (" + //
                "\"HOME\" TEXT);"); // 0: home
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"HOME_DAO\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, HomeDao entity) {
        stmt.clearBindings();
 
        String home = entity.getHome();
        if (home != null) {
            stmt.bindString(1, home);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, HomeDao entity) {
        stmt.clearBindings();
 
        String home = entity.getHome();
        if (home != null) {
            stmt.bindString(1, home);
        }
    }

    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    @Override
    public HomeDao readEntity(Cursor cursor, int offset) {
        HomeDao entity = new HomeDao( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0) // home
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, HomeDao entity, int offset) {
        entity.setHome(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
     }
    
    @Override
    protected final Void updateKeyAfterInsert(HomeDao entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    @Override
    public Void getKey(HomeDao entity) {
        return null;
    }

    @Override
    public boolean hasKey(HomeDao entity) {
        // TODO
        return false;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
